name: OSX Cross Compiler CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches:
      - $default-branch
      - dev/*

  pull_request:
    branches:
      - $default-branch

env:
  MACOS_SDK_VERSION: 15.4
  CI_REGISTRY: docker.io
  CI_REGISTRY_USER: ${{ secrets.CI_REGISTRY_USER }}
  CI_REGISTRY_PASSWORD: ${{ secrets.CI_REGISTRY_PASSWORD }}
  CI_REGISTRY_GHCR_USER: ${{ secrets.CI_REGISTRY_GHCR_USER }}
  CR_PAT: ${{ secrets.CR_PAT }}
  CI_REGISTRY_GHCR: ${{ secrets.CI_REGISTRY_GHCR }}

jobs:
  build-cross-compiler:
    name: Build Cross Compiler
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/lcjuves/container-image-builder:latest
      volumes:
        - /var/run/docker.sock:/var/run/docker.sock

    steps:
      - uses: actions/checkout@v3

      - name: Prepare for build
        run: |
          GITHUB_REPOSITORY=${{ github.repository }}
          echo "GITHUB_REPOSITORY=$GITHUB_REPOSITORY" >>"$GITHUB_ENV"
          # shellcheck disable=SC2129
          echo "OUT_TARBALL_PATH=$PWD/${GITHUB_REPOSITORY##*/}.tar.xz" >>"$GITHUB_ENV"
        shell: bash

      - name: Building ...
        run: |
          cat <<'EOF' >"$PWD/action-ci-build.sh"
          OSX_CROSS_COMPILER="/workspace/${GITHUB_REPOSITORY##*/}"
          cd "$OSX_CROSS_COMPILER" || exit
          # picked this version as they work well with godot-rust, feel free to change
          # git checkout 7c090bd8cd4ad28cf332f1d02267630d8f333c19

          UNATTENDED=yes OSX_VERSION_MIN=10.10 CLANG_VERSION=19.0.0 ./build.sh

          cd "$OSX_CROSS_COMPILER" || exit
          mv target "${GITHUB_REPOSITORY##*/}"
          tar -cJf "${GITHUB_REPOSITORY##*/}.tar.xz" "${GITHUB_REPOSITORY##*/}"
          EOF

          exec docker run -v "$PWD:/workspace/${GITHUB_REPOSITORY##*/}" \
              -e GITHUB_REPOSITORY="$GITHUB_REPOSITORY" \
              -e MACOS_SDK_VERSION=$MACOS_SDK_VERSION \
              --entrypoint=bash "ghcr.io/lcjuves/osx-cross-compiler-builder" -ex "/workspace/${GITHUB_REPOSITORY##*/}/action-ci-build.sh"
        shell: bash

      - name: Publish compiler artifact
        uses: softprops/action-gh-release@v1
        with:
          name: OSX Cross Compiler
          tag_name: osx-cross-compiler
          prerelease: false
          files: |
            ${{ env.OUT_TARBALL_PATH }}

      - name: Publish rustaceans docker image
        if: ${{ github.repository == 'LcJuves/osx-cross-compiler' }}
        run: |
          git clone --depth 1 -b main https://github.com/LcJuves/podock.git
          cd podock/rustaceans || exit
          mv $OUT_TARBALL_PATH .
          docker login "$CI_REGISTRY" -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD"
          docker pull "$CI_REGISTRY_USER/amuse-lang-environment:llvmenv-jit"
          docker tag "$CI_REGISTRY_USER/amuse-lang-environment:llvmenv-jit" amuse-lang-environment:llvmenv-jit
          docker build -t "$CI_REGISTRY_USER/rustaceans:jit" -f jit.Dockerfile .
          docker push "$CI_REGISTRY_USER/rustaceans:jit"
          docker tag "$CI_REGISTRY_USER/rustaceans:jit" rustaceans:jit
          docker build -t "$CI_REGISTRY_USER/rustaceans" .
          docker push "$CI_REGISTRY_USER/rustaceans"
          docker login -u "$CI_REGISTRY_GHCR_USER" -p "$CR_PAT" "$CI_REGISTRY_GHCR"
          docker tag "$CI_REGISTRY_USER/rustaceans:jit" "$CI_REGISTRY_GHCR/$CI_REGISTRY_USER/rustaceans:jit"
          docker push "$CI_REGISTRY_GHCR/$CI_REGISTRY_USER/rustaceans:jit"
          docker tag "$CI_REGISTRY_USER/rustaceans" "$CI_REGISTRY_GHCR/$CI_REGISTRY_USER/rustaceans"
          docker push "$CI_REGISTRY_GHCR/$CI_REGISTRY_USER/rustaceans"
        shell: bash
